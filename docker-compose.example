version: '3.7'

services:
  php:
    # image: myimage.php
    build:
      context: .
      dockerfile: .docker/php.dockerfile
    container_name: app-php
    restart: unless-stopped
    tty: true
    ports:
      - "9000:9000"
    env_file:
      - .docker/.env
    working_dir: /var/www
    volumes:
      - .:/var/www
      - .docker/php/php.ini:/usr/local/etc/php/conf.d/php.ini
    networks:
      - app-network

  nginx:
    # image: nginx:stable-alpine
    build:
      context: .
      dockerfile: .docker/nginx.dockerfile
    container_name: app-nginx
    restart: unless-stopped
    tty: true
    ports:
      - "8181:80"
    env_file:
      - .docker/.env
    working_dir: /var/www
    volumes:
      - .:/var/www
      - .docker/nginx/vhost.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    networks:
      - app-network

  mysql:
    # image: mariadb:latest
    build:
      context: .
      dockerfile: .docker/mariadb.dockerfile
    container_name: app-mariadb
    restart: unless-stopped
    tty: true
    volumes:
      - .docker/app-dbdata:/var/lib/mysql
      # - ./mariadb/my.cnf:/etc/mysql/my.cnf #custom config
    ports:
      - "33061:3306"
    env_file:
      - .docker/.env
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: app-redis
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    volumes:
      - .docker/app-redisdata/redis:/data
    ports:
      - "6379:6379"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
volumes:
  app-dbdata:
    driver: local
  app-redisdata:
    driver: local
