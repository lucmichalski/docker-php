version: '3.7'

services:
  php:
    # image: myimage.php
    build:
      context: .
      dockerfile: .docker/php.dockerfile
    container_name: app-php
    restart: unless-stopped
    tty: true
    ports:
      - "9000:9000"
      - "6001:6001" #laravel-websocket port
    env_file:
      - .docker/.env
    working_dir: /var/www
    volumes:
      - .:/var/www
      - .docker/php/php.ini:/usr/local/etc/php/conf.d/php.ini
    networks:
      - app-network

  nginx:
    # image: nginx:stable-alpine
    build:
      context: .
      dockerfile: .docker/nginx.dockerfile
    container_name: app-nginx
    env_file:
      - .docker/.env
    restart: unless-stopped
    tty: true
    ports:
      - "8181:80"
    working_dir: /var/www
    volumes:
      - .:/var/www
      - .docker/nginx/vhost.conf:/etc/nginx/conf.d/default.conf
      - .docker/nginx/custom.conf:/etc/nginx/conf.d/custom.conf
    depends_on:
      - php
      - mysql
    networks:
      - app-network

  mysql:
    # image: mariadb:latest
    build:
      context: .
      dockerfile: .docker/mariadb.dockerfile
    container_name: app-mariadb
    env_file:
      - .docker/.env
    restart: unless-stopped
    tty: true
    volumes:
      - .docker/app-dbdata:/var/lib/mysql
      # - ./mariadb/my.cnf:/etc/mysql/my.cnf #custom config
    ports:
      - "33061:3306"
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: app-redis
    command: ["redis-server", "--appendonly", "yes"]
    env_file:
      - .docker/.env
    hostname: redis
    volumes:
      - .docker/app-redisdata:/data
    ports:
      - "63791:6379"
    networks:
      - app-network

  mailhog:
    image: mailhog/mailhog:latest
    container_name: app-mailhog
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui
    networks:
      - web


  # elasticsearch:
  #   image: elasticsearch:7.9.3
  #   container_name: app-elasticsearch
  #   environment:
  #     - xpack.security.enabled=false
  #     - discovery.type=single-node
  #   env_file:
  #     - .docker/.env
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #     nofile:
  #       soft: 10000
  #       hard: 10000
  #   cap_add:
  #     - IPC_LOCK
  #   volumes:
  #     - .docker/app-elasticsearch:/usr/share/elasticsearch/data
  #   ports:
  #     - "9200:9200"
  #     - "9300:9300"
  #   networks:
  #     - app-network

  # kibana:
  #   image: kibana:7.9.3
  #   container_name: app-elasticsearch
  #   env_file:
  #     - .docker/.env
  #   ports:
  #     - 5601:5601
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - app-network

  manticore:
    image: manticoresearch/manticore:latest
    container_name: app-manticore
    restart: always
    ports:
      - 9306:9306
      - 9308:9308
    ulimits:
      nproc: 10000
      nofile:
         soft: 10000
         hard: 10000
      memlock:
        soft: -1
        hard: -1
    volumes:
      - .docker/app-manticore:/var/lib/manticore
#      - ./manticore.conf:/etc/manticoresearch/manticore.conf # uncommment if you use a custom config
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
volumes:
  app-dbdata:
    driver: local
  app-redisdata:
    driver: local
  # app-elasticsearch:
  #   driver: local
  app-manticore:
    driver: local
